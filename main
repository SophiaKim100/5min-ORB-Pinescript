//@version=6
strategy("5min ORB", overlay=true, initial_capital = 1000, commission_type=strategy.commission.percent, commission_value=0.1, slippage=2)
import TradingView/ta/9

// User Inputs
startDate = timestamp(2022, 1, 1, 9, 30)
endDate = timestamp(2026, 12, 31, 16, 00)
timeframeMinutes = input(5, "Opening Range Minutes")
exitEOD = input(false, "Exit End of Day")

// Extract current date components
year_ = year(time)
month_ = month(time)
day_ = dayofmonth(time)

// Define session timestamps
marketOpenHour = 9
marketOpenMinute = 30
marketCloseHour = 16
marketCloseMinute = 00
latestEntryHour = 11
latestEntryMinute = 00

// Define the frist 5-min range using 1min candles
var float openingRangeHigh = na 
var float openingRangeLow = na 
var bool rangeSet = false
var float breakoutCandleHigh = na
var float breakoutCandleLow = na
var int breakoutBarIndex = na 

// Detect New Day and Reset ORB
isNewDay = ta.change(dayofmonth(time))  != 0   // True when a new day starts
if isNewDay
    openingRangeHigh := na
    openingRangeLow := na
    rangeSet := false
    breakoutCandleHigh := na
    breakoutCandleLow := na
    breakoutBarIndex := na 

// Capture opening Range 
if (not rangeSet and hour == marketOpenHour and minute >= marketOpenMinute and minute < (marketOpenMinute + timeframeMinutes))
    openingRangeHigh := na(openingRangeHigh) ? high : math.max(openingRangeHigh, high)
    openingRangeLow := na(openingRangeLow) ? low : math.min(openingRangeLow, low)

//Lock the range after 5min
if (hour == marketOpenHour and minute == marketOpenMinute + timeframeMinutes)
    rangeSet := true

// Define Strong Retest Candle Types
candleRange = high - low
candleBody = math.abs(close - open)
upperWick = high - math.max(open, close)
lowerWick = math.min(open, close) - low

//Hammer/Inverted Hammer (Long Wick Candles)
isHammerBullish = lowerWick >= candleBody * 1.5  // Long lower wick, small body (bullish)
isInvertedHammerBearish = upperWick >= candleBody * 1.5  // Long upper wick, small body (bearish)

//Large Body Candles
isStrongBullishCandle = candleBody > candleRange * 0.6  // Bullish candle with >60% body
isStrongBearishCandle = candleBody > candleRange * 0.6  // Bearish candle with >60% body

// Entry Conditions
breakoutLong = ta.crossover(close, openingRangeHigh) and (isHammerBullish or isStrongBullishCandle)
breakoutShort = ta.crossunder(close, openingRangeLow) and (isInvertedHammerBearish or isStrongBearishCandle)
validTime = (hour >= marketOpenHour and hour <= latestEntryHour and (hour != latestEntryHour or minute <= latestEntryMinute))

// Store Breakout Candle High/Low
if breakoutLong or breakoutShort
    breakoutCandleHigh := high
    breakoutCandleLow := low
    breakoutBarIndex := bar_index

//Retest Must Come After breakout bar 
retestCandleAfterBreakout = bar_index > breakoutBarIndex



//Valid Retests
validRetestUp = retestCandleAfterBreakout and low <= openingRangeHigh and close > openingRangeHigh and (isHammerBullish or isStrongBullishCandle)
validRetestDown = retestCandleAfterBreakout and high >= openingRangeLow and close < openingRangeLow and (isInvertedHammerBearish or isStrongBearishCandle)

// Stop-Loss with Close Confirmation
var float stopLossLong = na
var float stopLossShort = na 
var float takeProfit1Long = na
var float takeProfit2Long = na
var float takeProfit1Short = na
var float takeProfit2Short = na 

//Reset daily high/low at start of each day
var float dailyHigh = na
var float dailyLow = na 

if ta.change(dayofmonth(time))  != 0
    dailyHigh := high
    dailyLow := low

//Variables for TP and SL lines
var line longTP1Line = na
var line longTP2Line = na 
var line longSLLine = na 
var line shortTP1Line = na 
var line shortTP2Line = na 
var line shortSLLine = na

// Long Trade Execution
if (validRetestUp and validTime and time >= startDate and time <= endDate)
    strategy.entry("Long", strategy.long)
    stopLossLong := breakoutCandleLow // Use breakout candle low
    rrTargetLong = close + (close - stopLossLong) * 2 //1:2 RR Target 

    // TP1 = First to hit newHighOfDay or 1:2 RR 
    takeProfit1Long := dailyHigh
    if rrTargetLong < dailyHigh
        takeProfit1Long := rrTargetLong

    //TP2 = whatever remains
    takeProfit2Long := dailyHigh
    if takeProfit1Long == dailyHigh
        takeProfit2Long := rrTargetLong    

    //Plot TP and SL lines
    longTP1Line := line.new(x1=bar_index, y1=takeProfit1Long, x2=bar_index + 10, y2=takeProfit1Long, color=color.green, width = 2, style=line.style_dashed)
    longTP2Line := line.new(x1=bar_index, y1=takeProfit2Long, x2=bar_index + 10, y2=takeProfit2Long, color=color.green, width = 2, style=line.style_dashed)
    longSLLine := line.new(x1=bar_index, y1=stopLossLong, x2=bar_index + 10, y2=stopLossLong, color=color.red, width = 2, style=line.style_dashed)

    strategy.exit("1", from_entry = "Long", qty_percent = 50, limit = takeProfit1Long)
    strategy.exit("2", from_entry = "Long", qty_percent = 50, limit = takeProfit2Long)

//Short Trade Execution
if (validRetestDown and validTime and time >= startDate and time <= endDate)
    strategy.entry("Short", strategy.short)

    stopLossShort := breakoutCandleHigh
    rrTargetShort = close - (stopLossShort - close) * 2  // 1:2 RR target

    // TP1 = First to hit New Low of Day or 1:2 RR
    takeProfit1Short := dailyLow
    if rrTargetShort > dailyLow
        takeProfit1Short := rrTargetShort

    // TP2 = Whichever remains
    takeProfit2Short := dailyLow
    if takeProfit1Short == dailyLow
        takeProfit2Short := rrTargetShort

    //Plot TP and SL lines
    if na(shortTP1Line)
        shortTP1Line := line.new(x1=bar_index, y1=takeProfit1Short, x2=bar_index, y2=takeProfit1Short, color=color.green, width = 1, style=line.style_dashed)
    if na(shortTP2Line)
        shortTP2Line := line.new(x1=bar_index, y1=takeProfit2Short, x2=bar_index, y2=takeProfit2Short, color=color.green, width = 1, style=line.style_dashed)
    if na(shortSLLine)    
        shortSLLine := line.new(x1=bar_index, y1=stopLossShort, x2=bar_index, y2=stopLossShort, color=color.red, width = 1, style=line.style_dashed)

    strategy.exit("1", from_entry="Short", qty_percent=50, limit=takeProfit1Short)
    strategy.exit("2", from_entry="Short", qty_percent=50, limit=takeProfit2Short)


//Close Trade if a Candle Fully Closes Beyond Stop Loss
if strategy.position_size > 0 and close < breakoutCandleLow
    strategy.close("Long", comment="SL Hit - Long")

if strategy.position_size < 0 and close > breakoutCandleHigh
    strategy.close("Short", comment="SL Hit - Short")


// Exit at End of Day
if (exitEOD and hour == marketCloseHour and minute >= marketCloseMinute)
    strategy.close("Long", comment = "EOD Close")
    strategy.close("Short", comment = "EOD Close")

// Preserve Visuals
plot(openingRangeHigh, color=color.green, title="Opening Range High")
plot(openingRangeLow, color=color.red, title="Opening Range Low")

// Debugging Strategy Execution
plot(strategy.opentrades, color=color.green, style=plot.style_stepline, title="Open Trades")
plot(strategy.closedtrades, color=color.orange, style=plot.style_stepline, title="Closed Trades")
